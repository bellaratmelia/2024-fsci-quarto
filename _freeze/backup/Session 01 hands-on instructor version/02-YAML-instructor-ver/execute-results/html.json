{
  "hash": "ab960518f740f2e3ef48815c49564881",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on #3: Instructor Version\"\nAuthor: \"Danping\"\nformat: \n    html:\n        toc: true\n        toc-depth: 4\n        number-sections: false\n        #styling options\n        theme: default\n        # code block options\n        highlight-style: \"breeze\"\n        code-line-numbers: true\n        code-tools: true\n        code-fold: show\n        code-overflow: \"wrap\" #Other option: scroll\n        # execution options\n        echo: true\n        eval: true\n        warning: false\n        error: false\n---\n\n\n\n## Hands-on #3\n\n### Instructions\n\n1.  Play around with YAML options and render the document to see the output.\n\n-   Add table of contents `toc: true`\n\n-   change the depth of your Table of Contents, e.g. `toc-depth: 3`\n\n-   Pick a [HTML theme](https://quarto.org/docs/output-formats/html-themes.html) at this link to be applied on your document, e.g. `theme: \"chosen theme\"`\n\n-   \n\n2.  render with terminal and Quarto console\n\n### Demo\n\n#### Format\n\n```         \n---\nformat: pdf\n---\n```\n\n::: aside\nTry Other options: html, pdf, docx, pptx, revealjs etc.\n:::\n\n#### Table of Contents\n\n1.  TOC as a global option:\n\n```         \ntoc: true\ntoc-depth: 4\n```\n\n2.  TOC for specific format - note the nested layout:\n\n```         \n---\nformat: \n    html:\n        toc: true\n---\n```\n\n3.  Numbered sections\n\n```         \nnumber-sections: true\n```\n\n#### Styling\n\n```         \ntheme: \"quartz\"\n```\n\n#### code & execution related settings\n\n**Hiding code**ï¼š hide codes in the output file\n\nNote: this can be override with settings inside individual code blocks, i.e. code chunk options\n\n**Code Fold**: true\\|false\\|show (fold but initially shown)\n\n```         \nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n```\n\n**Code Overflow**: wrap\\|scroll\n\n```         \nformat:\n  html:\n    code-overflow: wrap\n```\n\n**Code Tools**: include tools for readers to copy codes or interact with your document\n\n```         \nformat:\n  html:\n    code-fold: true\n```\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nggplot(penguins, \n       aes(x = flipper_length_mm, y = bill_length_mm)) +\n  geom_point(aes(color = species, shape = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(\n    title = \"Flipper and bill length\",\n    subtitle = \"Dimensions for penguins at Palmer Station LTER\",\n    x = \"Flipper length (mm)\", y = \"Bill length (mm)\",\n    color = \"Penguin species\", shape = \"Penguin species\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](02-YAML-instructor-ver_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.markdown .cell-code}\n#DEMO YAML Header Options\n---\nhighlight-style: \"breeze\" \ncode-line-numbers: true\ncode-tools: true\ncode-fold: show\ncode-overflow: \"wrap\" #Other option: scroll\n\neval: false #whether to run the code for every rendering\necho: true #whether to include code in the rendered document\nwarning: false #whether to display warnings in the rendered document\nerror: false #whether to display errors in the rendered document\n---\n```\n:::\n",
    "supporting": [
      "02-YAML-instructor-ver_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}