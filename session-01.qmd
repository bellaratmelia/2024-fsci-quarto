---
title: "Getting Started with Quarto"
author: "Bella Ratmelia & Dong Danping"
format:
  revealjs: 
    theme: [default, custom.scss]
    width: 1980
    height: 1080
    slide-number: true
    footer: "[C03 Making Research More Transparent with Quarto and RStudio](https://bellaratmelia.github.io/2024-fsci-quarto/)"
    chalkboard: false
    incremental: true
---

# Session 01 - Introduction to Quarto

Welcome!

## Welcome

Hello!

-   Let's get to know each other!

## About This Workshop

-   We assume that you have some basic knowledge of R, RStudio and probably a little bit of Markdown
-   [Workshop Website](https://bellaratmelia.github.io/2024-fsci-quarto/) (built with Quarto)
    -   Pre-workshop setup instructions
    -   Workshop materials
    -   Lesson objectives and lesson plan

<!-- -->

-   If you need more help, please let one of the instructors know

## Learning Objectives

By the end of the session, participants will be able to:

1.  Describe how Quarto can enhance transparency in scientific and technical publishing.

2.  Use RStudio to combine narrative text, R code, mathematical formulas, and citations within Quarto to produce polished and verifiable research documents.

3.  Publish Quarto documents into the following format: static HTML document, Word, PDF and RevealJS presentation to cater to different publication and presentation needs.

4.  Use Quarto Pub or GitHub Pages to create websites to communicate their research findings to a wider audience.

## Setup and instructions

1.  [Download](https://posit.co/download/rstudio-desktop/) and install the latest version of R
2.  [Download](https://posit.co/download/rstudio-desktop/) and install the latest version of RStudio
3.  [Download](https://quarto.org/docs/download/index.html) and install the latest version of Quarto
4.  Install these R packages (to be updated):

```{r}
#| eval: false
#| echo: TRUE
#| code-line-numbers: false
#| fragment: true

options(repos = c(CRAN = "https://cloud.r-project.org"))

pkg_list <- c( "tidyverse", "gt", "gtExtras", "reactable", "ggiraph", "here", "rmarkdown", "gtsummary", "fs", "skimr")

install.packages(pkg_list)
```

## Literate Programming

> "*Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a **computer** what to do, let us concentrate rather on explaining to **human** beings what we want a computer to do.*"
>
> -- Donald Knuth, 1984

Essentially, literate programming is about:

-   Creating code that is not only executable but also readable and understandable by humans

-   Weaving code and documentation in a **single document**, emphasizing human-readable explanation alongside executable code

## Example: eLife Reproducible Article

## ![](images\02_reproducible_elife.PNG)

## Example: eLife Reproducible Article

::: {layout-ncol="2"}
![A figure from the reproducible article](images\03a_elife_figure.PNG)

![The underlying live codes for the same figure](images\03b_elife_figure_code.PNG)
:::

## Research Transparency & Reproducibility {.hidden}

-   Enables researcher to provide clear, detailed descriptions of their methodologies, algorithms, and computational processes.

-   This integration ensures that the logic and rationale behind each part of the code are explicitly documented, making it easier for others to follow, reproduce, and validate the research.

-   Reduces ambiguities and potential misinterpretations, fostering a more robust and transparent scientific discourse.

In Quarto, this is enabled through code chunks - more details about this on the next session

## What is Quarto

-   Quarto is an open-source scientific and technical publishing system

-   you can weave together narrative text and code to produce elegantly formatted output such as documents, web pages, blog posts, books and more

## A little bit about Markdown and RMarkdown

-   lightweight markup language created in 2004

-   plain text with simple syntax for easy text formatting

-   widely used for documentation, README files and web content

-   RMarkdown is an extension of Markdown developed by RStudio which allows embedding of R code chunks within Markdown documents

-   reproducible research in R!

## How does RMarkdown work

## Quarto vs R Markdown

## Basic Markdown syntax

-   table,

## What is YAML?

-   YAML (YAML Ain't Markup Language) headers in Quarto documents control various aspects of document rendering and metadata.

## Code Chunks

## Output formats

# Template slides and notes

## Multiple Columns

::: columns
::: {.column .fragment width="50%"}
Left column - point 1 - point 2
:::

::: {.column .fragment width="50%"}
Right column - point 3 - point 4
:::
:::

## Absolute positions

::: {.absolute .fragment bottom="25" left="100"}
![](images/howard-gentleman.jpeg){width="150" fig-alt="Howard dressed as a victorian gentleman"}
:::

## Column Fragment

```{r}
#| output-location: column-fragment
library(ggplot2)

ggplot(mtcars, aes(x = mpg, y = disp)) +
  geom_point()
```

## Tips

-   Alt + Click to Zoom into a section for text that look small on screen
-   Ctrl + Plus to zoom in
