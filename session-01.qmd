---
title: "Getting Started with Quarto"
author: "Bella Ratmelia & Dong Danping"
format:
  revealjs: 
    theme: [simple, custom.scss]
    width: 1980
    height: 1080
    slide-number: true
    footer: "[C03 Making Research More Transparent with Quarto and RStudio](https://bellaratmelia.github.io/2024-fsci-quarto/)"
    chalkboard: true
    incremental: true
---

# Session 01 - Introduction

Welcome!

## Welcome

Hello!

-   We assume that you have some basic knowledge of R, RStudio and probably a little bit of Markdown

<!-- -->

-   If you need more help, please let one of the instructors know

## Learning Objectives

-   point one

-   point two

## Setup and instructions

1.  [Download](https://posit.co/download/rstudio-desktop/) and install R
2.  [Download](https://posit.co/download/rstudio-desktop/) and install the latest version of RStudio
3.  Install these R packages:

```{r}
#| eval: false
#| echo: fenced
#| code-line-numbers: false

options(repos = c(CRAN = "https://cloud.r-project.org"))

pkg_list <- c( "tidyverse", "gt", "gtExtras", "reactable", "ggiraph", "here", "quarto", "rmarkdown", "gtsummary", "palmerpenguins", "fs", "skimr" )

install.packages(pkg_list)
```

## What is Quarto

-   Quarto is an open-source scientific and technical publishing system

-   you can weave together narrative text and code to produce elegantly formatted output such as documents, web pages, blog posts, books and more

## A little bit about Markdown and RMarkdown

-   lightweight markup language created in 2004

-   plain text with simple syntax for easy text formatting

-   widely used for documentation, README files and web content

-   RMarkdown is an extension of Markdown developed by RStudio which allows embedding of R code chunks within Markdown documents

-   reproducible research in R!

## How does RMarkdown work

## some concepts

-   **Literate Programming:** Code and documentation are written together in a single document, emphasizing human-readable explanation alongside executable code

## Literate Programming

> Literate Programming, introduced by Donald Knuth in the 1980s, is a programming paradigm that emphasizes the intertwining of human-readable documentation and source code.

Essentially:

-   The program is written as a coherent narrative where code segments and explanations are woven together in a way that emphasizes understanding and readability

-   The code segments ordered in a logical manner for the reader, rather than the order required by the compiler.

-   The narrative format helps to bridge the gap between the code and the theoretical framework, ensuring that the computational steps are aligned with the objectives.

## Effect on Research Transparency & Reproducibility

-   Enables researcher to provide clear, detailed descriptions of their methodologies, algorithms, and computational processes.

-   This integration ensures that the logic and rationale behind each part of the code are explicitly documented, making it easier for others to follow, reproduce, and validate the research.

-   Reduces ambiguities and potential misinterpretations, fostering a more robust and transparent scientific discourse.

In Quarto, this is enabled through code chunks - more details about this on the next session

## Quarto vs R Markdown

## Basic Markdown syntax

-   table,

## What is YAML?

-   YAML (YAML Ain't Markup Language) headers in Quarto documents control various aspects of document rendering and metadata.

## Code Chunks

## Output formats

# Template slides and notes

## Multiple Columns

::: columns
::: {.column .fragment width="50%"}
Left column - point 1 - point 2
:::

::: {.column .fragment width="50%"}
Right column - point 3 - point 4
:::
:::

## Absolute positions

::: {.absolute .fragment bottom="25" left="100"}
![](images/howard-gentleman.jpeg){width="150" fig-alt="Howard dressed as a victorian gentleman"}
:::

## Column Fragment

```{r}
#| output-location: column-fragment
library(ggplot2)

ggplot(mtcars, aes(x = mpg, y = disp)) +
  geom_point()
```

## Tips

-   Alt + Click to Zoom into a section for text that look small on screen
-   Ctrl + Plus to zoom in
