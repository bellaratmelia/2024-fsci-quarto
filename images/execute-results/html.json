{
  "hash": "3a4450098d88beeb91b057154a9f8109",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Getting Started with Quarto\"\nauthor: \"Bella Ratmelia & Dong Danping\"\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    width: 1980\n    height: 1080\n    slide-number: true\n    footer: \"[C03 Making Research More Transparent with Quarto and RStudio](https://bellaratmelia.github.io/2024-fsci-quarto/)\"\n    chalkboard: false\n    incremental: true\n---\n\n\n\n# Session 01 - Introduction to Quarto\n\nWelcome!\n\n## Welcome\n\nHello!\n\n-   Let's get to know each other!\n\n## About This Workshop\n\n-   We assume that you have some basic knowledge of R, RStudio and probably a little bit of Markdown\n-   [Workshop Website](https://bellaratmelia.github.io/2024-fsci-quarto/) (built with Quarto)\n    -   Pre-workshop setup instructions\n    -   Workshop materials\n    -   Lesson objectives and lesson plan\n\n<!-- -->\n\n-   If you need more help, please let one of the instructors know\n\n## Learning Objectives\n\nBy the end of the session, participants will be able to:\n\n1.  Describe how Quarto can enhance transparency in scientific and technical publishing.\n\n2.  Use RStudio to combine narrative text, R code, mathematical formulas, and citations within Quarto to produce polished and verifiable research documents.\n\n3.  Publish Quarto documents into the following format: static HTML document, Word, PDF and RevealJS presentation to cater to different publication and presentation needs.\n\n4.  Use Quarto Pub or GitHub Pages to create websites to communicate their research findings to a wider audience.\n\n## Setup and instructions\n\n1.  [Download](https://posit.co/download/rstudio-desktop/) and install the latest version of R\n2.  [Download](https://posit.co/download/rstudio-desktop/) and install the latest version of RStudio\n3.  [Download](https://quarto.org/docs/download/index.html) and install the latest version of Quarto\n4.  Install these R packages (to be updated):\n\n\n\n::: {.cell fragment='true'}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\npkg_list <- c( \"tidyverse\", \"gt\", \"gtExtras\", \"reactable\", \"ggiraph\", \"here\", \"rmarkdown\", \"gtsummary\", \"fs\", \"skimr\")\n\ninstall.packages(pkg_list)\n```\n:::\n\n\n\n## Literate Programming\n\n> \"*Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a **computer** what to do, let us concentrate rather on explaining to **human** beings what we want a computer to do.*\"\n>\n> -- Donald Knuth, 1984\n\nEssentially:\n\n-   Create code that is not only executable but also readable and understandable by humans\n\n-   Code and documentation are written together in a **single document**, emphasizing human-readable explanation alongside executable code\n\n## Effect on Research Transparency & Reproducibility\n\n-   Enables researcher to provide clear, detailed descriptions of their methodologies, algorithms, and computational processes.\n\n-   This integration ensures that the logic and rationale behind each part of the code are explicitly documented, making it easier for others to follow, reproduce, and validate the research.\n\n-   Reduces ambiguities and potential misinterpretations, fostering a more robust and transparent scientific discourse.\n\nIn Quarto, this is enabled through code chunks - more details about this on the next session\n\n## What is Quarto\n\n-   Quarto is an open-source scientific and technical publishing system\n\n-   you can weave together narrative text and code to produce elegantly formatted output such as documents, web pages, blog posts, books and more\n\n## A little bit about Markdown and RMarkdown\n\n-   lightweight markup language created in 2004\n\n-   plain text with simple syntax for easy text formatting\n\n-   widely used for documentation, README files and web content\n\n-   RMarkdown is an extension of Markdown developed by RStudio which allows embedding of R code chunks within Markdown documents\n\n-   reproducible research in R!\n\n## How does RMarkdown work\n\n## Quarto vs R Markdown\n\n## Basic Markdown syntax\n\n-   table,\n\n## What is YAML?\n\n-   YAML (YAML Ain't Markup Language) headers in Quarto documents control various aspects of document rendering and metadata.\n\n## Code Chunks\n\n## Output formats\n\n# Template slides and notes\n\n## Multiple Columns\n\n::: columns\n::: {.column .fragment width=\"50%\"}\nLeft column - point 1 - point 2\n:::\n\n::: {.column .fragment width=\"50%\"}\nRight column - point 3 - point 4\n:::\n:::\n\n## Absolute positions\n\n::: {.absolute .fragment bottom=\"25\" left=\"100\"}\n![](images/howard-gentleman.jpeg){width=\"150\" fig-alt=\"Howard dressed as a victorian gentleman\"}\n:::\n\n## Column Fragment\n\n\n\n::: {.cell output-location='column-fragment'}\n::: {.cell-output-display}\n![](session-01_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n## Tips\n\n-   Alt + Click to Zoom into a section for text that look small on screen\n-   Ctrl + Plus to zoom in\n",
    "supporting": [
      "session-01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}